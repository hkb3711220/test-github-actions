name: Pre-Review

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - edited
  workflow_dispatch:

jobs:
  linter:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0
      - name: Super-Linter
        uses: super-linter/super-linter/slim@v7.2.1 # x-release-please-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_ALL_CODEBASE_TIMEOUT: 1000
          ENABLE_GITHUB_ACTIONS_STEP_SUMMARY: true
          DISABLE_ERRORS: true
      - name: Comment PR with Super Linter results
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: false
          GITHUB_TOKEN: ${{ secrets.github_token }}
          path: super-linter-output/super-linter-summary.md

  scan:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build an image from Dockerfile
        run: docker build -t test-github-actions:${{ github.sha }} .
      - name: Scan
        uses: aquasecurity/trivy-action@0.29.0
        with:
          image-ref: test-github-actions:${{ github.sha }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          output: trivy-scan-result.txt

      - name: Format Trivy Scan Result
        run: |
          if [ -s trivy-scan-result.txt ]; then
            # ファイルに内容がある場合
            echo -e "## 脆弱性スキャン結果\n<details><summary>詳細</summary>\n\n\`\`\`\n$(cat trivy-scan-result.txt)\n\`\`\`\n</details>" > formatted-trivy-result.md
          else
            # ファイルが空の場合
            echo -e "## 脆弱性スキャン結果\n脆弱性が検知されませんでした。" > formatted-trivy-result.md
          fi

        # PR にコメントを追加
      - name: Comment PR with Trivy scan results
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: false
          GITHUB_TOKEN: ${{ secrets.github_token }}
          path: formatted-trivy-result.md

  post-message:
    needs: [linter, scan]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Post a message
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "*GitHub Action build result*: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
